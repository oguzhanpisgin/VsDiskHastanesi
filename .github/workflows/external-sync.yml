name: External Data Sync

on:
  schedule:
    - cron: '15 2 * * *'   # Daily 02:15 UTC
  workflow_dispatch:

jobs:
  external-sync:
    name: Run external update sequence
    runs-on: windows-latest  # Need LocalDB / sqlcmd availability
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure sqlcmd (SqlServer module fallback)
        shell: pwsh
        run: |
          if (-not (Get-Command sqlcmd -ErrorAction SilentlyContinue)) {
            Write-Host 'sqlcmd not found; installing SqlServer module for Invoke-Sqlcmd fallback'
            Install-Module SqlServer -Force -Scope CurrentUser
          }

      - name: Prepare LocalDB
        shell: pwsh
        run: |
          sqllocaldb i | Out-String
          sqllocaldb start MSSQLLocalDB
          sqllocaldb info MSSQLLocalDB | Out-String

      - name: Run external update (skip KeywordGap until source confirmed)
        id: external
        shell: pwsh
        run: |
          Set-Location $env:GITHUB_WORKSPACE
          $cmd = '.\scripts\external-update-sequence.ps1 -Force -Server "(localdb)\MSSQLLocalDB" -SkipKeywordGap'
          Write-Host "Running: $cmd"
          powershell -ExecutionPolicy Bypass -File .\scripts\external-update-sequence.ps1 -Force -Server "(localdb)\MSSQLLocalDB" -SkipKeywordGap
          $ec = $LASTEXITCODE
          echo "exit_code=$ec" >> $env:GITHUB_OUTPUT
          if($ec -ne 0){ Write-Error "External update script failed with exit code $ec" }

      - name: Summarize log tail
        if: always()
        shell: pwsh
        run: |
          $log = Get-ChildItem -Recurse -Filter *.md -ErrorAction SilentlyContinue | Select -First 1
          Write-Host 'Summary complete.'

      - name: Create issue on failure (placeholder)
        if: failure()
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $title = "External Sync Failure $(Get-Date -Format 'yyyy-MM-dd')"
            
          $body = @"
Run ID: ${{ github.run_id }}
Exit Code: ${{ steps.external.outputs.exit_code }}
Action: external-update-sequence.ps1 (skip KeywordGap)
Please investigate ExternalFetchLog table locally.
"@
          Write-Host "Would create issue: $title"
          # Placeholder only; uncomment to actually create via gh cli when desired
          # echo $body | gh issue create --title "$title" --body -
